<?php

/**
 * BaseMilitaryRecords
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $group_accounting
 * @property string $category_accounting
 * @property string $composition
 * @property string $military_rank
 * @property string $military_discount_specialty
 * @property string $number_military_discount_specialty
 * @property string $fitness
 * @property string $name_district_military_office
 * @property string $number_special_accounting
 * @property Doctrine_Collection $MilitaryRecords
 * 
 * @method string              getGroupAccounting()                    Returns the current record's "group_accounting" value
 * @method string              getCategoryAccounting()                 Returns the current record's "category_accounting" value
 * @method string              getComposition()                        Returns the current record's "composition" value
 * @method string              getMilitaryRank()                       Returns the current record's "military_rank" value
 * @method string              getMilitaryDiscountSpecialty()          Returns the current record's "military_discount_specialty" value
 * @method string              getNumberMilitaryDiscountSpecialty()    Returns the current record's "number_military_discount_specialty" value
 * @method string              getFitness()                            Returns the current record's "fitness" value
 * @method string              getNameDistrictMilitaryOffice()         Returns the current record's "name_district_military_office" value
 * @method string              getNumberSpecialAccounting()            Returns the current record's "number_special_accounting" value
 * @method Doctrine_Collection getMilitaryRecords()                    Returns the current record's "MilitaryRecords" collection
 * @method MilitaryRecords     setGroupAccounting()                    Sets the current record's "group_accounting" value
 * @method MilitaryRecords     setCategoryAccounting()                 Sets the current record's "category_accounting" value
 * @method MilitaryRecords     setComposition()                        Sets the current record's "composition" value
 * @method MilitaryRecords     setMilitaryRank()                       Sets the current record's "military_rank" value
 * @method MilitaryRecords     setMilitaryDiscountSpecialty()          Sets the current record's "military_discount_specialty" value
 * @method MilitaryRecords     setNumberMilitaryDiscountSpecialty()    Sets the current record's "number_military_discount_specialty" value
 * @method MilitaryRecords     setFitness()                            Sets the current record's "fitness" value
 * @method MilitaryRecords     setNameDistrictMilitaryOffice()         Sets the current record's "name_district_military_office" value
 * @method MilitaryRecords     setNumberSpecialAccounting()            Sets the current record's "number_special_accounting" value
 * @method MilitaryRecords     setMilitaryRecords()                    Sets the current record's "MilitaryRecords" collection
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMilitaryRecords extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('military_records');
        $this->hasColumn('group_accounting', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('category_accounting', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('composition', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('military_rank', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('military_discount_specialty', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('number_military_discount_specialty', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('fitness', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name_district_military_office', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('number_special_accounting', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('JobeetJob as MilitaryRecords', array(
             'local' => 'id',
             'foreign' => 'military_records_id'));
    }
}